---
title: Getting started
order: 20
---

To get started with contributing to OpenProblems, you'll need to fork and clone the OpenProblems repository to your local machine.

## Create a fork

Go to the OpenProblems repository at [https://github.com/openproblems-bio/openproblems-v2](https://github.com/openproblems-bio/openproblems-v2) and click on the "Fork" button in the top right corner of the page.

![](https://i.imgur.com/fUcpLYl.png){width=400px}


This will create a copy of the repository under your GitHub account. 


## Clone the repository
To clone this forked repository to your local machine, copy the URL of the forked repository by clicking the green "Code" button and selecting HTTPS or SSH.

In your terminal or command prompt, navigate to the directory where you want to clone the repository and enter the following command:

```bash
git clone <forked repository URL>
```

This will download a copy of the repository to your local machine. You can now make changes to the code, add new functionality, and commit your changes.

## Download test resources

You will also need to download the test resources by running the following command.

```bash
viash run src/common/sync_test_resources/config.vsh.yaml
```

    Completed 256.0 KiB/7.2 MiB (302.6 KiB/s) with 6 file(s) remaining
    Completed 512.0 KiB/7.2 MiB (595.8 KiB/s) with 6 file(s) remaining
    Completed 768.0 KiB/7.2 MiB (880.3 KiB/s) with 6 file(s) remaining
    Completed 1.0 MiB/7.2 MiB (1.1 MiB/s) with 6 file(s) remaining    
    Completed 1.2 MiB/7.2 MiB (1.3 MiB/s) with 6 file(s) remaining
    ...

## Ready, set, go!

That's it! Now you should be able to start adding functionality to the pipeline.
Please check the relevant documentation for adding a [dataset](add_a_dataset.qmd), 
[method](add_a_method.qmd), or [metric](add_a_metric.qmd). Here are a few example
commands to help you get started quickly.

Run a component on a test dataset:

```bash
viash run src/label_projection/methods/knn/config.vsh.yaml -- \
  --input_train resources_test/label_projection/pancreas/train.h5ad \
  --input_test resources_test/label_projection/pancreas/test.h5ad \
  --output output.h5ad
```

Unit test a component:

```bash
viash test src/label_projection/methods/knn/config.vsh.yaml
```

Run all unit tests for one of the tasks:

```bash
viash ns test --query label_projection --parallel --platform docker
```

Please note that if you encounter any issues during the first-time setup, there are several resources available to help you troubleshoot. These include the ["Troubleshooting"](../more_information/troubleshooting.qmd) page of this documentation and the OpenProblems community on GitHub. We encourage you to explore these resources and reach out to the community for help if needed.