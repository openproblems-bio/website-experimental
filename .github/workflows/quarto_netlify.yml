on:
  push:
    branches: [ main ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
  # to be able to trigger a manual build
  workflow_dispatch:

name: Render project

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      RENV_PATHS_ROOT: ~/.local/share/renv

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.1"
          use-public-rspm: true

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # - name: Cache packages
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ env.RENV_PATHS_ROOT }}
      #     key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-renv-

      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
          
      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          tinytex: true 

      - name: Render with Quarto
        shell: bash -l {0}  
        run: |
          source renv/python/virtualenvs/renv-python-3.10/bin/activate
          quarto render

      - name: Deploy ðŸš€
        uses: jsmrcaga/action-netlify-deploy@v1.8.2
        if: github.event_name != 'pull_request'
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "Prod deploy v${{ github.ref }}"
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: _site
          install_command: echo no install required
          build_command: echo no build required

      - name: Deploy preview
        if: github.event_name == 'pull_request'
        uses: jsmrcaga/action-netlify-deploy@v1.8.2
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "PR deploy v${{ github.ref }}"
          deploy_alias: ${{ env.BRANCH_NAME }}
          build_directory: _site
          install_command: echo no install required
          build_command: echo no build required

      - name: Status check
        if: github.event_name == 'pull_request'
        uses: Sibz/github-status-action@v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: Netlify preview
          state: success
          target_url: https://${{ env.BRANCH_NAME }}--openproblems-experimental.netlify.app
