on:
  push:
    branches: [ main ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
  # to be able to trigger a manual build
  workflow_dispatch:

name: Render project

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.1"
          use-public-rspm: true

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: r-lib/actions/setup-renv@v2
          
      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          tinytex: true

      - name: Render with Quarto
        shell: bash -l {0}  
        run: |
          source renv/python/virtualenvs/renv-python-3.10/bin/activate
          quarto render

      - name: Deploy ðŸš€
        uses: jsmrcaga/action-netlify-deploy@v1.7.2
        if: github.event_name != 'pull_request'
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "Prod deploy v${{ github.ref }}"
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: _site
          install_command: echo no install required
          build_command: echo no build required

      - name: Deploy preview
        id: deploy_preview
        if: github.event_name == 'pull_request'
        uses: jsmrcaga/action-netlify-deploy@v1.7.2
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "PR deploy v${{ github.ref }}"
          deploy_alias: ${{ env.BRANCH_NAME }}
          build_directory: _site
          install_command: echo no install required
          build_command: echo no build required
      
      - name: Debug
        run: |
          echo ${{ toJSON(steps.deploy_preview.outputs) }}

      - name: Status check
        if: github.event_name == 'pull_request'
        uses: Sibz/github-status-action@v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: Netlify preview
          state: success
          target_url: ${{ steps.deploy_preview.outputs.NETLIFY_PREVIEW_URL }}

      - uses: thollander/actions-comment-pull-request@v2
        if: github.event_name == 'pull_request'
        with:
          message: |
            [![Deploy: success](https://img.shields.io/badge/Deploy-success-success)](${{ steps.deploy_preview.outputs.NETLIFY_PREVIEW_URL }})
          comment_tag: deploy_status

      - uses: thollander/actions-comment-pull-request@v2
        if: github.event_name == 'pull_request' && failure()
        with:
          message: |
            [![Deploy: failure](https://img.shields.io/badge/Deploy-failure-critical)](${{ steps.deploy_preview.outputs.NETLIFY_LOGS_URL }})
          comment_tag: deploy_status

